services:
  telegram_bot:
    build:
      context: .
    command: python -c "import sys; print('Starting bot...'); import asyncio; from src.integrations.telegram_handlers import run_telegram_bot; print('Import successful'); asyncio.run(run_telegram_bot())"
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - bullbot_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  celery_worker:
    build:
      context: .
    command: celery -A src.tasks.celery_app worker --loglevel=info --queues=telegram --concurrency=1 --max-memory-per-child=50000
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - bullbot_network
    deploy:
      resources:
        limits:
          memory: 80M
        reservations:
          memory: 40M

  celery_beat:
    build:
      context: .
    command: celery -A src.tasks.celery_app beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - bullbot_network
    deploy:
      resources:
        limits:
          memory: 64M
        reservations:
          memory: 32M

  redis:
    image: redis:8.0-alpine
    ports:
      - "6380:6379"
    networks:
      - bullbot_network
    deploy:
      resources:
        limits:
          memory: 48M
        reservations:
          memory: 24M
    command: >
      redis-server
      --maxmemory 32mb
      --maxmemory-policy allkeys-lru
      --save ""

networks:
  bullbot_network:
    external: true
    name: bullbot-signals_bullbot_network 